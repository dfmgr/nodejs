#!/usr/bin/env sh
# shellcheck shell=sh
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202305010900-git
# @@Author           :  Jason Hempstead
# @@Contact          :  jason@casjaysdev.pro
# @@License          :  WTFPL
# @@ReadME           :  setup_node --help
# @@Copyright        :  Copyright: (c) 2023 Jason Hempstead, Casjays Developments
# @@Created          :  Monday, May 01, 2023 09:00 EDT
# @@File             :  setup_node
# @@Description      :  install nodejs on apt/yum based systems
# @@Changelog        :  New script
# @@TODO             :  Better documentation
# @@Other            :
# @@Resource         :
# @@Terminal App     :  no
# @@sudo/root        :  no
# @@Template         :  shell/sh
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# shellcheck disable=SC2317
# shellcheck disable=SC2120
# shellcheck disable=SC2155
# shellcheck disable=SC2199
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0" 2>/dev/null)"
VERSION="202305010900-git"
RUN_USER="$USER"
SET_UID="$(id -u)"
SCRIPT_SRC_DIR="$(cd "$(dirname "$0")" && pwd)"
SETUP_NODE_CWD="$(realpath "$PWD")"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# colorization
if [ "$SHOW_RAW" = "true" ]; then
  __printf_color() { printf '%b' "$1\n" | tr -d '\t' | sed '/^%b$/d;s,\x1B\[ 0-9;]*[a-zA-Z],,g'; }
else
  __printf_color() { { [ -z "$2" ] || DEFAULT_COLOR=$2; } && printf "%b" "$(tput setaf "$DEFAULT_COLOR" 2>/dev/null)" "$1\n" "$(tput sgr0 2>/dev/null)"; }
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check for command
__cmd_exists() { which $1 >/dev/null 2>&1 || return 1; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# custom functions

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Define variables
DEFAULT_COLOR="254"
SETUP_NODE_EXIT_STATUS=0
[ -n "$SETUP_NODE_NPM_PACKAGES" ] || SETUP_NODE_NPM_PACKAGES="vercel prettier eslint npm-check-updates"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application
case "$1" in
remove)
  shift 1
  if __cmd_exists npm; then
    [ $# -eq 0 ] || SETUP_NODE_NPM_PACKAGES="$*"
    for npm_pkg in $SETUP_NODE_NPM_PACKAGES; do
      if __cmd_exists $npm_pkg; then
        __printf_color "Removing $npm_pkg" 6 && npm uninstall -g $npm_pkg >/dev/null 2>&1 || { __printf_color "Failed to remove $npm_pkg" 1 >/dev/null 2>&1 || return 1; }
        [ $? -eq 0 ] || __printf_color "Failed to remove $npm_pkg" 1 >&2
      else
        __printf_color "$npm_pkg is not installed" 1 >&2
      fi
    done
  else
    __printf_color "nodejs is not installed" 1 >&2
    SETUP_NODE_EXIT_STATUS=1
  fi
  ;;
*)
  if __cmd_exists npm; then
    [ $# -eq 0 ] || SETUP_NODE_NPM_PACKAGES="$*"
    for npm_pkg in $SETUP_NODE_NPM_PACKAGES; do
      __cmd_exists $npm_pkg && __printf_color "npm package $npm_pkg is already installed" 6 || { __printf_color "Installing $npm_pkg" 3 && npm i -g $npm_pkg >/dev/null 2>&1; }
      [ $? -eq 0 ] || __printf_color "Failed to install $npm_pkg" 1 >&2
    done
  else
    __printf_color "nodejs is not installed" 1 >&2
    SETUP_NODE_EXIT_STATUS=1
  fi
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $SETUP_NODE_EXIT_STATUS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# ex: ts=2 sw=2 et filetype=sh
