#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : setup_nvm
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : Node Version Manager installer
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$HOME/.local/share/CasjaysDev/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$HOME/.local/share/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
else
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set options

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# main program

export NVM_BIN="${NVM_BIN:-$HOME/.local/bin}"
export NVM_DIR="${NVM_DIR:-$HOME/.local/share/nvm}"

if [[ "$*" == "--remove" ]]; then
  printf_red "Removing NVM from your system"
  rm -Rf $NVM_DIR
  if [ ! -d $NVM_DIR/.git ]; then
    printf_green "NVM Has been removed"
  fi
  exit
fi

if [ -z "$(command -v nvm 2>/dev/null)" ]; then
  printf_red "installing NVM to $NVM_DIR"
  mkdir -p $NVM_BIN $NVM_DIR

  if [ -d $NVM_DIR/.git ]; then
    execute "git -C $NVM_DIR pull" "Updating NVM"
  else
    execute \
      "git clone https://github.com/nvm-sh/nvm $NVM_DIR" \
      "Installing the NVM repo"
  fi

  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || exit 1
  [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion" || exit 1

  if [ -z "$(command -v nvm 2>/dev/null)" ]; then
    execute "nvm install node && nvm use node" "Setting up NVM"
  fi

  if [ -n "$(command -v nvm 2>/dev/null)" ]; then
    printf_green "NVM has been installed"
  else
    printf_red "NVM Failed to install"
  fi
else
  printf_green "NVM is already installed"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
