#!/usr/bin/env bash
#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202207042108-git
# @Author            :  Jason Hempstead
# @Contact           :  jason@casjaysdev.com
# @License           :  LICENSE.md
# @ReadME            :  setup_nvm --help
# @Copyright         :  Copyright: (c) 2022 Jason Hempstead, Casjays Developments
# @Created           :  Saturday, Jul 09, 2022 21:15 EDT
# @File              :  setup_nvm
# @Description       :  Node Version Manager installer
# @TODO              :
# @Other             :
# @Resource          :
# @sudo/root         :  no
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
VERSION="202207042108-git"
HOME="${USER_HOME:-$HOME}"
USER="${SUDO_USER:-$USER}"
RUN_USER="${SUDO_USER:-$USER}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set bash options
if [[ "$1" == "--debug" ]]; then shift 1 && set -xo pipefail && export SCRIPT_OPTS="--debug" && export _DEBUG="on"; fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function file
if [ -f "$SRC_DIR/functions.bash" ]; then
  FUNCTIONS_DIR="$SRC_DIR"
  . "$FUNCTIONS_DIR/functions.bash"
elif [ -f "$HOME/.local/bin/functions.bash" ]; then
  FUNCTIONS_DIR="$HOME/.local/bin"
  . "$FUNCTIONS_DIR/functions.bash"
else
  printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
  return 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# helper function
__version() { app_version; }
__help() {
  app_help "Usage: setup_nvm       -  setup_nvm --version" \
    "$PROG --remove                -  remove nvm" \
    "$PROG --version               -  display version" \
    "$PROG --force                 -  force install" \
    "$PROG --help                  -  display help"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  case $1 in
  --version) __version ;;
  --help) __help ;;
  --force)
    shift 1
    FORCE="true"
    ;;
  --remove) shift 1 && printf_red "Removing NVM from your system" &&
    rm -Rf "$NVM_DIR" && [ ! -d "$NVM_DIR/.git" ] && printf_green "NVM Has been removed" exit 0 || exit 1 ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Required app check
  cmd_exists --error bash || exit 1
  am_i_online --error || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ "$FORCE" != "true" ] && [ -n "$NODE_MANAGER" ]; then
    if [ "$NODE_MANAGER" != "nvm" ]; then
      printf_yellow "nvm is not set to be your node manager"
      printf_yellow "Currently $NODE_MANAGER is set for node management"
      exit 1
    fi
  else
    NODE_MANAGER="nvm"
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  export NVM_BIN="${NVM_BIN:-$HOME/.local/bin}"
  export NVM_DIR="${NVM_DIR:-$HOME/.local/share/nodejs/nvm}"
  mkdir -p "$NVM_BIN" "$NVM_DIR"
  if [ -d "$NVM_DIR/.git" ]; then
    printf_blue "Updating NVM in $NVM_DIR"
    git -C "$NVM_DIR" pull -q &>/dev/null
  else
    printf_blue "Installing NVM from git to $NVM_DIR"
    git clone "https://github.com/nvm-sh/nvm" "$NVM_DIR" -q &>/dev/null
  fi
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || true
  if builtin type nvm &>/dev/null; then
    printf_green "NVM has been installed"
  else
    printf_red "NVM Failed to install"
  fi
  if [[ "$FORCE" = "true" ]] || nvm use default 2>&1 | grep -q N/A; then
    printf_blue "Configuring NVM"
    nvm use --delete-prefix node &>/dev/null
    nvm install node &>/dev/null && nvm use node &>/dev/null
    printf_cyan "nvm is set to use: $(nvm current 2>/dev/null)"
    if builtin type nvm &>/dev/null; then
      printf_green "NVM has been configured"
    else
      printf_red "NVM Failed to configure"
    fi
  fi
  return "${exitCode:-$?}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
