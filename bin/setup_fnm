#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202207042108-git
# @Author            :  Jason Hempstead
# @Contact           :  jason@casjaysdev.com
# @License           :  LICENSE.md
# @ReadME            :  setup_fnm --help
# @Copyright         :  Copyright: (c) 2022 Jason Hempstead, Casjays Developments
# @Created           :  Saturday, Jul 09, 2022 21:14 EDT
# @File              :  setup_fnm
# @Description       :  Fast Node Manager installer
# @TODO              :
# @Other             :
# @Resource          :
# @sudo/root         :  no
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set bash options
if [[ "$1" == "--debug" ]]; then shift 1 && set -xo pipefail && export SCRIPT_OPTS="--debug" && export _DEBUG="on"; fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="$(basename "$0")"
VERSION="202207042108-git"
HOME="${USER_HOME:-$HOME}"
USER="${SUDO_USER:-$USER}"
RUN_USER="${SUDO_USER:-$USER}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function file
if [ -f "$SRC_DIR/functions.bash" ]; then
  FUNCTIONS_DIR="$SRC_DIR"
  . "$FUNCTIONS_DIR/functions.bash"
elif [ -f "$HOME/.local/bin/functions.bash" ]; then
  FUNCTIONS_DIR="$HOME/.local/bin"
  . "$FUNCTIONS_DIR/functions.bash"
else
  printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
  return 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# helper function
__version() { app_version; }
__help() {
  app_help "Usage: setup_fnm       -  setup_fnm --version" \
    "$PROG --version               -  display version" \
    "$PROG --help                  -  display help" \
    "$PROG --force                 -  force install"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
installcmd() {
  curl -q -fsSL https://raw.githubusercontent.com/Schniz/fnm/master/.ci/install.sh |
    bash -s -- --install-dir "$HOME/.local/bin" --skip-shell >/dev/null 2>&1 &&
    return 0 || return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  case $1 in
  --version) __version ;;
  --help) __help ;;
  --force)
    shift 1
    FORCE="true"
    ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Required app check
  cmd_exists --error bash curl git || exit 1
  am_i_online --error || return 1
  if [ -n "$NODE_MANAGER" ]; then
    [ "$NODE_MANAGER" != "fnm" ] && exit 0
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  exitCode=0
  FNM_DIR="${FNM_DIR:-$HOME/.local/share/nodejs/fnm}"
  FNM_BIN="${FNM_BIN:-$HOME/.local/bin}"
  FNM_NODE_VERSION="${FNM_NODE_VERSION:-18}"
  export FNM_DIR FNM_BIN FNM_NODE_VERSION
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [[ "$*" == "--remove" ]]; then
    printf_red "Removing FNM from your system"
    [[ -n "$FNM_DIR" ]] && rm -Rf "$FNM_DIR" "$FNM_BIN/fnm"
    if [ ! -d "$FNM_DIR/.git" ] && [ -z "$(command -v fnm 2>/dev/null)" ]; then
      printf_green "FNM Has been removed"
    fi
    exit
  fi

  printf_red "installing NVM to $FNM_DIR"
  mkdir -p "$FNM_DIR"
  if [ -d "$FNM_DIR/.git" ]; then
    printf_blue "Updating NVM"
    git -C $FNM_DIR pull -q &>/dev/null
  else
    printf_blue "Running the FNM script"
    installcmd || printf_exit "Failed to install FNM"
  fi
  if [ -n "$(command -v fnm 2>/dev/null)" ]; then
    printf_blue "Setting up FNM"
    eval $(fnm eval)
    fnm install "$FNM_NODE_VERSION" &>/dev/null
    fnm ls | grep -q "$FNM_NODE_VERSION" && fnm use "$FNM_NODE_VERSION" &>/dev/null
  fi
  if [ -n "$(command -v fnm 2>/dev/null)" ]; then
    printf_green "FNM has been installed"
  else
    printf_red "FNM Failed to install"
    exitcode=1
  fi
  return "${exitCode:-$?}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
